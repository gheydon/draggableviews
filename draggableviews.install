<?php
// $Id$

/**
 * @file
 * Draggableviews defines a new database schema
 * for saving the collapsed/expand state of views.
 */

/**
 * Implementation of hook_schema().
 */
function draggableviews_schema() {
  $schema['draggableviews_collapsed'] = array(
    'description' => t('The table that knows whether sub-lists are collapsed or expanded.'),
    'fields' => array(
      'uid' => array(
        'description' => t('The user.'),
        'type' => 'int',
        'unsigned' => TRUE,
        'not null' => TRUE,
        'default' => 0,
      ),
      'parent_nid' => array(
        'description' => t('The parent node.'),
        'type' => 'int',
        'unsigned' => TRUE,
        'not null' => TRUE,
      ),
      'vid' => array(
        'description' => t('The view id.'),
        'type' => 'int',
        'unsigned' => TRUE,
        'not null' => TRUE,
      ),
      'collapsed' => array(
        'description' => t('The state.'),
        'type' => 'int',
        'unsigned' => TRUE,
        'not null' => TRUE,
        'default' => 0,
      ),
    ),
    'primary key' => array('uid', 'parent_nid', 'vid'),
  );

  $schema['draggableviews_structure'] = array(
    'description' => t('The table saves the order settings of an draggableview.'),
    'fields' => array(
      'vid' => array(
        'description' => t('Makes the order unique for each view.'),
        'type' => 'int',
        'unsigned' => TRUE,
        'not null' => TRUE,
        'default' => 0,
      ),
      'nid' => array(
        'description' => t('The node id.'),
        'type' => 'int',
        'unsigned' => TRUE,
        'not null' => TRUE,
      ),
      'delta' => array(
        'description' => t('Makes the order unique for each level.'),
        'type' => 'int',
        'unsigned' => TRUE,
        'not null' => TRUE,
      ),
      'value' => array(
        'description' => t('The value.'),
        'type' => 'int',
        'unsigned' => FALSE,
        'not null' => TRUE,
        'default' => 0,
      ),
    ),
    'primary key' => array('vid', 'nid', 'delta'),
  );
  return $schema;
}

/**
 * Implementation of hook_install().
 */
function draggableviews_install() {
  drupal_install_schema('draggableviews');
}

/**
 * Implementation of hook_uninstall().
 */
function draggableviews_uninstall() {
  drupal_uninstall_schema('draggableviews');
}

/**
 * Add a schema for structure information
 */
function draggableviews_update_6300() {
  $ret = array();
  $schemas = draggableviews_schema();
  db_create_table($ret, 'draggableviews_structure', $schemas['draggableviews_structure']);
  return $ret;
}

/**
 * Add a schema for structure information
 */
function draggableviews_update_6301() {
  $ret = array();
  db_drop_primary_key($ret, 'draggableviews_collapsed');
  db_add_field($ret, 'draggableviews_collapsed', 'vid', array('type' => 'int', 'not null' => TRUE, 'unsigned' => TRUE));
  db_add_primary_key($ret, 'draggableviews_collapsed', array('uid', 'vid', 'parent_nid'));
  return $ret;
}
